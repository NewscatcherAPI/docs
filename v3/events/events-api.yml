openapi: 3.0.3
info:
  title: Events API
  description: |
    The Events API processes news articles to extract structured event data about business activities. It supports public and custom event types with standardized schema and filtering capabilities.

    The API enables querying events using standardized parameters and returns normalized data in a consistent JSON format.

    ## Public events

    Three event types are available to all API users:

    - Layoffs: Company workforce reductions
    - Data Breaches: Information security incidents
    - Fundraising: Investment and funding rounds

    Additional event types are available through custom implementations. Contact us for information about custom event development and access.

    ## Core features

    - Event extraction from news articles with field standardization
    - Entity deduplication across multiple news sources
    - Date range filtering with relative and absolute dates
    - Company and location-based filtering
    - Event-specific field filtering (e.g., layoff size, funding amount)
    - Optional inclusion of source article data
  version: 1.0.0
  termsOfService: https://newscatcherapi.com/terms-of-service
  contact:
    name: Maksym Sugonyaka
    email: maksym@newscatcherapi.com
    url: https://www.newscatcherapi.com/pricing

externalDocs:
  description: Find out more about Events API
  url: https://newscatcherapi.com/docs/v3/events

servers:
  - url: https://events.newscatcherapi.xyz
    description: Events API server

security:
  - ApiKeyAuth: []

tags:
  - name: Subscription
    description:
      Operations related to subscription management and available events.
  - name: Events Search
    description: Operations for searching and retrieving events.
  - name: Event Fields
    description: Operations to discover available fields for event types.
  - name: Health
    description: API health check operations.

paths:
  /api/events_info/get_event_fields:
    get:
      tags:
        - Event Fields
      summary: Get event fields
      description: Returns available fields for specified event type.
      operationId: getEventFields
      parameters:
        - name: event_type
          in: query
          required: true
          schema:
            type: string
          description: Type of event to get fields for
      responses:
        "200":
          $ref: "#/components/responses/EventFieldsResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "408":
          $ref: "#/components/responses/RequestTimeoutError"
        "422":
          $ref: "#/components/responses/ValidationError"
        "429":
          $ref: "#/components/responses/RateLimitError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/events_search:
    post:
      tags:
        - Events Search
      summary: Search for events
      description: Search for events using various parameters and filters
      operationId: searchEvents
      requestBody:
        $ref: "#/components/requestBodies/EventsSearchRequest"
      responses:
        "200":
          $ref: "#/components/responses/EventsSearchResponse"
        "400":
          $ref: "#/components/responses/BadRequestError"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "408":
          $ref: "#/components/responses/RequestTimeoutError"
        "422":
          $ref: "#/components/responses/ValidationError"
        "429":
          $ref: "#/components/responses/RateLimitError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/subscription:
    get:
      tags:
        - Subscription
      summary: Retrieve subscription plan information
      description:
        Returns information about current subscription including available
        events and usage limits.
      operationId: getSubscription
      responses:
        "200":
          $ref: "#/components/responses/SubscriptionResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "429":
          $ref: "#/components/responses/RateLimitError"
        "500":
          $ref: "#/components/responses/InternalServerError"

    post:
      tags:
        - Subscription
      summary: Retrieve subscription plan information
      description:
        Returns information about current subscription including available
        events and usage limits.
      operationId: postSubscription
      responses:
        "200":
          $ref: "#/components/responses/SubscriptionResponse"
        "401":
          $ref: "#/components/responses/UnauthorizedError"
        "403":
          $ref: "#/components/responses/ForbiddenError"
        "429":
          $ref: "#/components/responses/RateLimitError"
        "500":
          $ref: "#/components/responses/InternalServerError"

  /api/health:
    get:
      tags:
        - Health
      summary: Health check
      description: Check if the API is operational
      operationId: getHealth
      responses:
        "200":
          description: API is operational
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "ok"
        "500":
          $ref: "#/components/responses/InternalServerError"

components:
  requestBodies:
    EventsSearchRequest:
      description: Search parameters for events
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - event_type
              - attach_articles_data
              - additional_filters
            properties:
              event_type:
                type: string
                enum: [layoff, data_breach, fundraising]
              attach_articles_data:
                type: boolean
              additional_filters:
                type: object
                # Properties depend on event type
                oneOf:
                  - $ref: "#/components/schemas/LayoffFilters"
                  - $ref: "#/components/schemas/DataBreachFilters"
                  - $ref: "#/components/schemas/FundraisingFilters"
              additional_article_fields:
                type: array
                items:
                  type: string
                example:
                  [
                    "description",
                    "published_date",
                    "nlp.summary",
                    "nlp.sentiment",
                  ]

  responses:
    EventFieldsResponse:
      description: Available fields for the specified event type
      content:
        application/json:
          schema:
            oneOf:
              - $ref: "#/components/schemas/LayoffFieldsResponse"
              - $ref: "#/components/schemas/DataBreachFieldsResponse"
              - $ref: "#/components/schemas/FundraisingFieldsResponse"

    EventsSearchResponse:
      description: Search results for events
      content:
        application/json:
          schema:
            type: object
            required:
              - message
              - count
              - events
            properties:
              message:
                type: string
              count:
                type: integer
              events:
                type: array
                items:
                  oneOf:
                    - $ref: "#/components/schemas/LayoffEvent"
                    - $ref: "#/components/schemas/DataBreachEvent"
                    - $ref: "#/components/schemas/FundraisingEvent"

    SubscriptionResponse:
      description:
        A successful response containing information about the current
        subscription plan.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/SubscriptionResponseDto"

    # Error Responses
    BadRequestError:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: "Invalid JSON in request body"
            status_code: 400
            status: "Bad request"

    UnauthorizedError:
      description: Unauthorized - Authentication failed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: "Invalid api key: INVALID_API_KEY"
            status_code: 401
            status: "Unauthorized"

    ForbiddenError:
      description: Forbidden - Server refuses action
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message:
              "Your plan request date range cannot be greater than 400 days"
            status_code: 403
            status: "Forbidden"

    RequestTimeoutError:
      description: Request timeout
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: "Request timed out after 30 seconds"
            status_code: 408
            status: "Request timeout"

    ValidationError:
      description: Validation error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: "Invalid date format"
            status_code: 422
            status: "Validation error"

    RateLimitError:
      description: Too many requests - Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
          example:
            message: "Max API requests concurrency reached"
            status_code: 429
            status: "Too many requests"

    InternalServerError:
      description: Internal server error
      content:
        text/plain:
          schema:
            type: string
          example: "Internal Server Error"

  schemas:
    # Base Fields Response Schema
    BaseFieldsResponse:
      type: object
      required:
        - message
        - count
        - fields
      properties:
        message:
          type: string
          description:
            Status message indicating success or providing additional context
          example: "Success"
        count:
          type: integer
          description: Total number of available fields returned
          example: 12
        fields:
          type: object
          description:
            Map of field names to their type definitions and usage examples

    # Field Type Definitions
    StringFieldType:
      type: object
      required:
        - type
        - usage_example
      properties:
        type:
          type: string
          enum: [String]
          description: Indicates this field accepts string values
        usage_example:
          type: object
          additionalProperties:
            type: string
          description: Shows how to use this field in search queries
          example:
            company_name: "Tesla"

    DateFieldType:
      type: object
      required:
        - type
        - usage_example
      properties:
        type:
          type: string
          enum: [Date]
          description: Indicates this field accepts date values
        usage_example:
          type: object
          additionalProperties:
            type: object
            properties:
              lte:
                type: string
                description: Less than or equal to date
              gte:
                type: string
                description: Greater than or equal to date
          description: |
            Shows how to use date ranges in search queries.
            Supports both absolute (YYYY-MM-DD) and relative (now-30d) date formats.
          example:
            event_date:
              lte: "now"
              gte: "now-30d"

    NumberFieldType:
      type: object
      required:
        - type
        - usage_example
      properties:
        type:
          type: string
          enum: [Number]
          description: Indicates this field accepts numeric values
        usage_example:
          type: object
          additionalProperties:
            type: object
            properties:
              lte:
                type: number
                description: Less than or equal to value
              gte:
                type: number
                description: Greater than or equal to value
          description: Shows how to use numeric ranges in search queries
          example:
            number_of_people_laid_off:
              gte: 100
              lte: 1000

    UnknownFieldType:
      type: object
      required:
        - type
        - usage_example
      properties:
        type:
          type: string
          enum: [Unknown]
          description: Indicates a field with special handling requirements
        usage_example:
          type: object
          additionalProperties:
            type: string
          description: Shows how to use this special field type
          example:
            special_field: "example value"

    # Event-specific Fields Responses
    LayoffFieldsResponse:
      allOf:
        - $ref: "#/components/schemas/BaseFieldsResponse"
        - type: object
          properties:
            fields:
              type: object
              required:
                - company_name
                - event_date
                - extraction_date
              properties:
                company_name:
                  $ref: "#/components/schemas/StringFieldType"
                event_date:
                  $ref: "#/components/schemas/DateFieldType"
                extraction_date:
                  $ref: "#/components/schemas/DateFieldType"
                "layoff.how_much_related":
                  $ref: "#/components/schemas/StringFieldType"
                "layoff.is_relevant_for_real_estate":
                  $ref: "#/components/schemas/UnknownFieldType"
                "layoff.layoff_reason":
                  $ref: "#/components/schemas/StringFieldType"
                "layoff.location":
                  $ref: "#/components/schemas/UnknownFieldType"
                "layoff.max_number_of_people_laid_off":
                  $ref: "#/components/schemas/NumberFieldType"
                "layoff.min_number_of_people_laid_off":
                  $ref: "#/components/schemas/NumberFieldType"
                "layoff.number_of_people_laid_off":
                  $ref: "#/components/schemas/NumberFieldType"
                "layoff.percentage_of_people_laid_off":
                  $ref: "#/components/schemas/NumberFieldType"
                "layoff.summary":
                  $ref: "#/components/schemas/StringFieldType"

    DataBreachFieldsResponse:
      allOf:
        - $ref: "#/components/schemas/BaseFieldsResponse"
        - type: object
          properties:
            fields:
              type: object
              required:
                - company_name
                - event_date
                - extraction_date
              properties:
                company_name:
                  $ref: "#/components/schemas/StringFieldType"
                event_date:
                  $ref: "#/components/schemas/DateFieldType"
                extraction_date:
                  $ref: "#/components/schemas/DateFieldType"
                "data_breach.data":
                  $ref: "#/components/schemas/StringFieldType"
                "data_breach.data_type":
                  $ref: "#/components/schemas/StringFieldType"
                "data_breach.impacted":
                  $ref: "#/components/schemas/StringFieldType"
                "data_breach.summary":
                  $ref: "#/components/schemas/StringFieldType"
                "data_breach.title":
                  $ref: "#/components/schemas/StringFieldType"

    FundraisingFieldsResponse:
      allOf:
        - $ref: "#/components/schemas/BaseFieldsResponse"
        - type: object
          properties:
            fields:
              type: object
              required:
                - company_name
                - event_date
                - extraction_date
              properties:
                company_name:
                  $ref: "#/components/schemas/StringFieldType"
                event_date:
                  $ref: "#/components/schemas/DateFieldType"
                extraction_date:
                  $ref: "#/components/schemas/DateFieldType"
                "fundraising.amount":
                  $ref: "#/components/schemas/NumberFieldType"
                "fundraising.company_description":
                  $ref: "#/components/schemas/StringFieldType"
                "fundraising.company_legal_name":
                  $ref: "#/components/schemas/StringFieldType"
                "fundraising.currency":
                  $ref: "#/components/schemas/StringFieldType"
                "fundraising.founders":
                  $ref: "#/components/schemas/StringFieldType"
                "fundraising.funding_type":
                  $ref: "#/components/schemas/StringFieldType"
                "fundraising.industry":
                  $ref: "#/components/schemas/StringFieldType"
                "fundraising.investors":
                  $ref: "#/components/schemas/StringFieldType"
                "fundraising.valuation":
                  $ref: "#/components/schemas/StringFieldType"

    # Base Event Schema
    BaseEvent:
      type: object
      required:
        - id
        - event_type
        - global_event_type
        - associated_article_ids
        - extraction_date
        - event_date
        - company_name
      properties:
        id:
          type: string
        event_type:
          type: string
        global_event_type:
          type: string
        associated_article_ids:
          type: array
          items:
            type: string
        extraction_date:
          type: string
          format: date-time
        event_date:
          type: string
          format: date-time
        company_name:
          type: string

    # Event-specific response schemas
    DataBreachEvent:
      title: Data Breach
      allOf:
        - $ref: "#/components/schemas/BaseEvent"
        - type: object
          properties:
            data_breach:
              type: object
              required:
                - data
                - impacted
                - title
              properties:
                summary:
                  type: string
                  description: Summary of the data breach event
                impacted:
                  type: array
                  items:
                    type: string
                  description: List of entities impacted by the breach
                data:
                  type: string
                  description: Description of the breached data
                data_type:
                  type: string
                  description: Categories of the breached data
                title:
                  type: string
                  description: Title of the data breach event

    FundraisingEvent:
      title: Fundraising
      allOf:
        - $ref: "#/components/schemas/BaseEvent"
        - type: object
          properties:
            fundraising:
              type: object
              properties:
                amount:
                  type: number
                company_description:
                  type: string
                company_legal_name:
                  type: string
                funding_type:
                  type: string
                currency:
                  type: string
                founders:
                  type: array
                  items:
                    type: string
                investors:
                  type: array
                  items:
                    type: string
                industry:
                  type: string
                valuation:
                  type: string

    LayoffEvent:
      title: Layoff
      allOf:
        - $ref: "#/components/schemas/BaseEvent"
        - type: object
          properties:
            layoff:
              type: object
              required:
                - summary
                - number_of_people_laid_off
                - percentage_of_people_laid_off
                - min_number_of_people_laid_off
                - max_number_of_people_laid_off
                - is_relevant_for_real_estate
                - location
              properties:
                summary:
                  type: string
                max_number_of_people_laid_off:
                  type: integer
                min_number_of_people_laid_off:
                  type: integer
                number_of_people_laid_off:
                  type: integer
                percentage_of_people_laid_off:
                  type: number
                how_much_related:
                  type: string
                is_relevant_for_real_estate:
                  type: boolean
                location:
                  type: array
                  items:
                    type: object
                    properties:
                      country:
                        type: string
                      city:
                        type: string
                      raw_location:
                        type: string
                      county:
                        type: string
                      state:
                        type: string

    # Filter Schemas
    DateRangeFilter:
      type: object
      properties:
        gte:
          type: string
          description: Date range in format like "30d", "now-90d"
        lte:
          type: string
          description: Date range in format like "now"

    NumberRangeFilter:
      type: object
      properties:
        gte:
          type: number
        lte:
          type: number

    # Events Filter Schemas
    LayoffFilters:
      title: Layoff
      type: object
      properties:
        company_name:
          type: string
        event_date:
          $ref: "#/components/schemas/DateRangeFilter"
        extraction_date:
          $ref: "#/components/schemas/DateRangeFilter"
        "layoff.how_much_related":
          type: string
        "layoff.layoff_reason":
          type: string
        "layoff.location":
          type: string
        "layoff.max_number_of_people_laid_off":
          $ref: "#/components/schemas/NumberRangeFilter"
        "layoff.min_number_of_people_laid_off":
          $ref: "#/components/schemas/NumberRangeFilter"
        "layoff.number_of_people_laid_off":
          $ref: "#/components/schemas/NumberRangeFilter"
        "layoff.percentage_of_people_laid_off":
          $ref: "#/components/schemas/NumberRangeFilter"

    DataBreachFilters:
      title: Data Breach
      type: object
      properties:
        company_name:
          type: string
        event_date:
          $ref: "#/components/schemas/DateRangeFilter"
        extraction_date:
          $ref: "#/components/schemas/DateRangeFilter"
        "data_breach.data":
          type: string
        "data_breach.data_type":
          type: string
        "data_breach.impacted":
          type: string
        "data_breach.summary":
          type: string
        "data_breach.title":
          type: string

    FundraisingFilters:
      title: Fundraising
      type: object
      properties:
        company_name:
          type: string
        event_date:
          $ref: "#/components/schemas/DateRangeFilter"
        extraction_date:
          $ref: "#/components/schemas/DateRangeFilter"
        "fundraising.amount":
          $ref: "#/components/schemas/NumberRangeFilter"
        "fundraising.company_description":
          type: string
        "fundraising.company_legal_name":
          type: string
        "fundraising.currency":
          type: string
        "fundraising.founders":
          type: string
        "fundraising.funding_type":
          type: string
        "fundraising.industry":
          type: string
        "fundraising.investors":
          type: string
        "fundraising.valuation":
          type: string

    # Placeholder for Article schema - used if "attach_articles_data": true
    Article:
      type: object
      description:
        Article schema to be replaced with the actual implementation from Local
        News API or News API v3. VALIDATE!

    # Events Search Request

    SubscriptionResponseDto:
      title: Subscription Response
      description: |
        Response model for a successful `Subscription` request retrieving plan information. Response field behavior:
        - Required fields are guaranteed to be present and non-null. 
        - Optional fields may be `null`/`undefined` if the data couldn't be extracted during processing.
      required:
        - active
        - calls_per_seconds
        - plan_name
        - usage_assigned_calls
        - usage_remaining_calls
        - additional_info
      type: object
      properties:
        active:
          title: Active
          description: Indicates whether the subscription is currently active.
          type: boolean
        calls_per_seconds:
          title: Calls Per Second
          description:
            The number of API calls allowed per second under the current plan.
          type: integer
        plan_name:
          title: Plan Name
          description: The name of the subscription plan.
          type: string
        usage_assigned_calls:
          title: Assigned Calls
          description:
            The total number of API calls assigned to the current subscription.
          type: integer
        usage_remaining_calls:
          title: Remaining Calls
          description:
            The number of API calls remaining for the current subscription
            period.
          type: integer
        additional_info:
          title: Additional Information
          description: Additional plan-specific information and features.
          type: object

    # Error schema
    Error:
      type: object
      properties:
        message:
          type: string
          description: A detailed description of the error.
        status_code:
          type: integer
          description: The HTTP status code of the error.
        status:
          type: string
          description: A short description of the status code.
      required:
        - message
        - status_code
        - status

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: x-api-token
      description: |
        API Key to authenticate requests.

        To access the API, include your API key in the `x-api-token` header. 
        To obtain your API key, complete the [form](https://www.newscatcherapi.com/pricing) or contact us directly.
