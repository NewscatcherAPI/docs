openapi: 3.0.3
info:
  title: NewsCatcher News API V2
  description: |
    NewsCatcher is a data-as-a-service startup that has one main goal:
    to build the largest database of structured news articles published online.
    In other words, we're like Google for the news part of the web, which you can access as a source of data.
    
    Some useful links:
    - [How NewsCatcher Works](https://docs.newscatcherapi.com/knowledge-base/how-newscatcher-works)
    - [GitHub for the Python SDK](https://github.com/NewscatcherAPI/newscatcherapi-sdk-python)
  contact:
    email: team@newscatcherapi.com
  version: 1.0.1
externalDocs:
  description: Find out more about NewsCatcher
  url: https://docs.newscatcherapi.com/
servers:
- url: https://api.newscatcherapi.com/v2
tags:
  - name: search
    description: Search for specific news articles
    externalDocs:
      description: Find out more about searching news articles
      url: https://docs.newscatcherapi.com/api-docs/endpoints/search-news
  - name: latest_headlines
    description: Get lastest news articles 
    externalDocs:
      description: Find out more about getting the latest news articles
      url: https://docs.newscatcherapi.com/api-docs/endpoints/latest-headlines
  - name: sources
    description: Get the list of top news sources supported by NewsCatcher.
    externalDocs:
      description: Find out more about getting a list of sources
      url: https://docs.newscatcherapi.com/api-docs/endpoints/sources
paths:
  /search:
    get:
      tags:
       - search
      summary: Search for specific news articles
      description: Main endpoint that allows you to find news article by keyword, date, language, country, etc.
      operationId: Search_get
      parameters:
        - $ref: "#/components/parameters/q"
        - $ref: "#/components/parameters/lang"
        - $ref: "#/components/parameters/not_lang"
        - $ref: "#/components/parameters/published_date_precision"
        - $ref: "#/components/parameters/from"
        - $ref: "#/components/parameters/to"
        - $ref: "#/components/parameters/search_in"
        - $ref: "#/components/parameters/countries"
        - $ref: "#/components/parameters/not_countries"
        - $ref: "#/components/parameters/topic"
        - $ref: "#/components/parameters/sources"
        - $ref: "#/components/parameters/not_sources"
        - $ref: "#/components/parameters/ranked_only"
        - $ref: "#/components/parameters/from_rank"
        - $ref: "#/components/parameters/to_rank"
        - $ref: "#/components/parameters/sort_by"
        - $ref: "#/components/parameters/page_size"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200_response"
        "400":
          description: "API is not put in headers"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "401":
          description: "API Key not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "406":
          description: "Wrong parameter has been used"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "408":
          description: "Request Timeout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "429":
          description: "Concurrency violated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
      security:
        - api_key: []
    post:
      tags:
       - search
      summary: Search for specific news articles
      description: Main endpoint that allows you to find news article by keyword, date, language, country, etc.
      operationId: Search_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Search'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200_response"
        "400":
          description: "API is not put in headers"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "401":
          description: "API Key not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "406":
          description: "Wrong parameter has been used"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "408":
          description: "Request Timeout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "429":
          description: "Concurrency violated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
      security:
        - api_key: []
  /latest_headlines:
    get:
      tags:
       - latest_headlines
      summary: Get Latest News Articles
      description: Get the latest headlines given any topic, country, or language.
      operationId: LatestHeadlines_get
      parameters:
        - $ref: "#/components/parameters/lang"
        - $ref: "#/components/parameters/not_lang"
        - $ref: "#/components/parameters/countries"
        - $ref: "#/components/parameters/not_countries"
        - $ref: "#/components/parameters/topic"
        - $ref: "#/components/parameters/sources"
        - $ref: "#/components/parameters/not_sources"
        - $ref: "#/components/parameters/ranked_only"
        - $ref: "#/components/parameters/page_size"
        - $ref: "#/components/parameters/page"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200_response_latest"
        "400":
          description: "API is not put in headers"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "401":
          description: "API Key not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "406":
          description: "Wrong parameter has been used"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "408":
          description: "Request Timeout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "429":
          description: "Concurrency violated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
      security:
        - api_key: []
    post:
      tags:
       - latest_headlines
      summary: Get Latest News Articles
      description: Get the latest headlines given any topic, country, or language.
      operationId: LatestHeadlines_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/latestHeadlines'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200_response_latest"
        "400":
          description: "API is not put in headers"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "401":
          description: "API Key not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "406":
          description: "Wrong parameter has been used"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "408":
          description: "Request Timeout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "429":
          description: "Concurrency violated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
      security:
        - api_key: []
  /sources:
    get:
      tags:
      - sources
      summary: Get top news sources supported by NewsCatcher.
      description: Returns a list of the top 100 supported news websites. Overall, we support over 60,000 websites. Using this endpoint, you may find the top 100 for your specific language, country, topic combination.
      operationId: Sources_get
      parameters:
        - $ref: "#/components/parameters/lang"
        - $ref: "#/components/parameters/countries"
        - $ref: "#/components/parameters/topic"
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200_response_sources"
        "400":
          description: "API is not put in headers"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "401":
          description: "API Key not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "406":
          description: "Wrong parameter has been used"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "408":
          description: "Request Timeout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "429":
          description: "Concurrency violated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
      security:
        - api_key: []
    post:
      tags:
      - sources
      summary: Get top news sources supported by NewsCatcher.
      description: Returns a list of the top 100 supported news websites. Overall, we support over 60,000 websites. Using this endpoint, you may find the top 100 for your specific language, country, topic combination.
      operationId: Sources_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SourcesQuery'
      responses:
        "200":
          description: "OK"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/200_response_sources"
        "400":
          description: "API is not put in headers"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "401":
          description: "API Key not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "406":
          description: "Wrong parameter has been used"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "408":
          description: "Request Timeout"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
        "429":
          description: "Concurrency violated"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error_response"
      security:
        - api_key: []
components:
  parameters:
    api_key:
      description: |
        Your unique authentication token
      name: x-api-key
      in: header
      required: true
      schema:
        type: string
    q:
      description: |
        Keyword/keywords you're searching for. This is the most important part of your query.
        Please, refer to the **Advanced Query Parameter** section below of the docs for more examples and explanations
      name: q
      in: query
      required: true
      schema:
        type: string
        example: '"Elon Musk"'
    lang:
      description: |
        Specifies the languages of the search. For example: `en`.
        The only accepted format is [ISO 639-1 — 2](https://en.wikipedia.org/wiki/ISO_639-1) letter code.
      name: lang
      in: query
      required: false
      schema:
        type: string
        enum: ["af", "ar", "bg", "bn", "ca", "cn", "cs", "cy", "da", "de", "el", "en", "es", "et", "fa", "fi", "fr", "gu", "he", "hi", "hr", "hu", "id", "it", "ja", "kn", "ko", "lt", "lv", "mk", "ml", "mr", "ne", "nl", "no", "pa", "pl", "pt", "ro", "ru", "sk", "sl", "so", "sq", "sv", "sw", "ta", "te", "th", "tl", "tr", "tw", "uk", "ur", "vi"]
        example: "en"
    not_lang:
      description: |
        Inverse to the `lang` parameter
      name: not_lang
      in: query
      required: false
      schema:
        type: string
        enum: ["af", "ar", "bg", "bn", "ca", "cn", "cs", "cy", "da", "de", "el", "en", "es", "et", "fa", "fi", "fr", "gu", "he", "hi", "hr", "hu", "id", "it", "ja", "kn", "ko", "lt", "lv", "mk", "ml", "mr", "ne", "nl", "no", "pa", "pl", "pt", "ro", "ru", "sk", "sl", "so", "sq", "sv", "sw", "ta", "te", "th", "tl", "tr", "tw", "uk", "ur", "vi"]
    published_date_precision:
      description: |
        There are 3 types of date precision we define:
        `full` — day and time of an article is correctly identified with the appropriate timezone
        `timezone unknown` — day and time of an article is correctly identified without timezone
        `date` — only the day is identified without an exact time
      name: published_date_precision
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/publish_date_precision"
    from:
      description: |
        `YYYY/mm/dd` From which point in time to start the search.
        The default timezone is UTC.
        Defaults to the past week.
      name: from
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/date"
    to:
      description: |
        `YYYY/mm/dd` Until which point in time to search for.
        The default timezone is UTC.
      name: to
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/date"
    search_in:
      description: |
        By default, we search what you specified in the `q` parameter in both `title` and `summary` of the article.
        However, you can limit this to either `title` or `summary`
      name: search_in
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/search_in"
    countries:
      description: |
        Countries where the news publisher is located.
        **Important**: This parameter is not responsible for the countries mentioned in the news article.
        One or multiple countries can be used in the search.
        The only acceptable format is [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
        For example, `US,CA,MX` or just `US`
      name: countries
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/countries"
    not_countries:
      description: |
        The inverse of the `countries` parameter.
      name: not_countries
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/countries"
    topic:
      description: |
        Accepted values: `news`, `sport`, `tech`, `world`, `finance`, `politics`, `business`, `economics`, `entertainment`, `beauty`, `travel`, `music`, `food`, `science`, `gaming`
        The topic to which you want to restrict the articles of your choice.
        Not all news articles are assigned with a topic, therefore, we cannot guarantee that 100% of topics talking about technology will be assigned a tech label.
      name: topic
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/topic"
    sources:
      description: |
        One or more news resources to filter your search. It should be the normal form of the URL,
        For example: `nytimes.com,theguardian.com`
      name: sources
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/sources"
    not_sources:
      description: |
        One or more sources to be excluded from the search.
        Comma-separated list. For example: `nytimes.com,cnn.com,wsj.com`
      name: not_sources
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/not_sources"
    ranked_only:
      description: |
        Default: `True`
        Limit the search only for the sources which are in the top 1 million online websites. Unranked sources are assigned a rank that equals `999999`
      name: ranked_only
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/ranked_only"
    from_rank:
      description: |
        `[0:999999]` The lowest boundary of the rank of a news website to filter by.
        Important: lower rank means that a source is more popular
      name: from_rank
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/rank"
    to_rank:
      description: |
        `[0:999999]` The upper boundary of the rank of a news website to filter by.
      name: to_rank
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/rank"
    sort_by:
      description: |
        `relevancy` (default value) — the most relevant results first
        `date` — the most recently published results first
        `rank` — the results from the highest-ranked sources first
      name: sort_by
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/sort_by"
    when:
      description: |
        The time period you want to get the latest headlines for.

        Accepted forms:
        - `7d` => Dailly Form (last 7 days time period),  `30d`  (last 30 days time period)
        - `1h` => Hourly Form (last hour), `24h` (last 24 hours)

        *Default*: The number of historic data available for your subscription plan
      name: when
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/when"
    page_size:
      description: |
        `[1:100]` How many articles to return per page.
      name: page_size
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/page_size"
    page:
      description: |
        The number of the page. Use it to scroll through the results.
        This parameter is used to paginate: scroll through results because one API response cannot return more than 100 articles.
      name: page
      in: query
      required: false
      schema:
        $ref: "#/components/schemas/page"
  schemas:
    Search:
      type: object
      properties:
        q:
          type: string
          description:  Keyword/keywords you're searching for. This is the most important part of your query. Please, refer to the **Advanced Query Parameter** section of the docs for more examples and explanations.
          example: '"Elon Musk"'
        lang:
          type: string
          description: The language you want to search in. 
          enum: ["af", "ar", "bg", "bn", "ca", "cn", "cs", "cy", "da", "de", "el", "en", "es", "et", "fa", "fi", "fr", "gu", "he", "hi", "hr", "hu", "id", "it", "ja", "kn", "ko", "lt", "lv", "mk", "ml", "mr", "ne", "nl", "no", "pa", "pl", "pt", "ro", "ru", "sk", "sl", "so", "sq", "sv", "sw", "ta", "te", "th", "tl", "tr", "tw", "uk", "ur", "vi"]
          example: "en"
        not_lang:
          type: string
          description: Inverse to the lang parameter. 
          enum: ["af", "ar", "bg", "bn", "ca", "cn", "cs", "cy", "da", "de", "el", "en", "es", "et", "fa", "fi", "fr", "gu", "he", "hi", "hr", "hu", "id", "it", "ja", "kn", "ko", "lt", "lv", "mk", "ml", "mr", "ne", "nl", "no", "pa", "pl", "pt", "ro", "ru", "sk", "sl", "so", "sq", "sv", "sw", "ta", "te", "th", "tl", "tr", "tw", "uk", "ur", "vi"]
        published_date_precision:
          type: string
          description: Precision of the publication date.
          enum: ["full", "timezone unknown", "date"]
          example: "full"
        from:
          type: string
          description: YYYY/mm/dd From which point in time to start the search. The default timezone is UTC.  Defaults to the past week.
          example: "2021/05/06"
        to:
          type: string
          description: YYYY/mm/dd Until which point in time to search for. The default timezone is UTC.
          example: "2021/05/06"
        search_in:
          type: string
          enum: ["title", "summary", "title_summary"]
          example: "title"
        countries:
          type: string
          example: "US,CA"
        not_countries:
          type: string
        topic:
          type: string
          enum: ["news", "sport", "tech", "world", "finance", "politics", "business", "economics", "entertainment", "beauty", "travel", "music", "food", "science", "gaming"]
          example: "business"
        sources:
          type: string
          example: "nytimes.com,theguardian.com"
        not_sources:
          type: string
        ranked_only:
          type: boolean
          example: true
        from_rank:
          description: |
            `[0:999999]` The lowest boundary of the rank of a news website to filter by.
            Important: lower rank means that a source is more popular
          type: integer
          minimum: 0
          maximum: 999999
        to_rank:
          description: |
            `[0:999999]` The upper boundary of the rank of a news website to filter by.
          type: integer
          minimum: 0
          maximum: 999999
        sort_by:
          type: string
          enum: ["relevancy", "date", "rank"]
          example: "rank"
        page_size:
          type: integer
          minimum: 1
          maximum: 100
          example: 100
        page:
          type: integer
          minimum: 1
          example: 1
    SourcesQuery:
      type: object
      properties:
        lang:
          type: string
          description: The language you want to search in. 
          enum: ["af", "ar", "bg", "bn", "ca", "cn", "cs", "cy", "da", "de", "el", "en", "es", "et", "fa", "fi", "fr", "gu", "he", "hi", "hr", "hu", "id", "it", "ja", "kn", "ko", "lt", "lv", "mk", "ml", "mr", "ne", "nl", "no", "pa", "pl", "pt", "ro", "ru", "sk", "sl", "so", "sq", "sv", "sw", "ta", "te", "th", "tl", "tr", "tw", "uk", "ur", "vi"]
          example: "en"
        countries:
          type: string
          example: "US,CA"
        topic:
          type: string
          enum: ["news", "sport", "tech", "world", "finance", "politics", "business", "economics", "entertainment", "beauty", "travel", "music", "food", "science", "gaming"]
          example: "business"
    latestHeadlines:
      type: object
      properties:
        when:
          type: string
          description: |
            The time period you want to get the headlines for.
            Accpeted format:
            - `7d` -> Daily form, last 7 days time period
            - `6h` -> Hourly form, last six hours
          example: "12h"
        lang:
          type: string
          description: The language you want to search in. 
          enum: ["af", "ar", "bg", "bn", "ca", "cn", "cs", "cy", "da", "de", "el", "en", "es", "et", "fa", "fi", "fr", "gu", "he", "hi", "hr", "hu", "id", "it", "ja", "kn", "ko", "lt", "lv", "mk", "ml", "mr", "ne", "nl", "no", "pa", "pl", "pt", "ro", "ru", "sk", "sl", "so", "sq", "sv", "sw", "ta", "te", "th", "tl", "tr", "tw", "uk", "ur", "vi"]
          example: "en"
        countries:
          type: string
          example: "US,CA"
        not_countries:
          type: string
        topic:
          type: string
          enum: ["news", "sport", "tech", "world", "finance", "politics", "business", "economics", "entertainment", "beauty", "travel", "music", "food", "science", "gaming"]
          example: "business"
        sources:
          type: string
          example: "nytimes.com,theguardian.com"
        not_sources:
          type: string
          example: "wsj.com"
        ranked_only:
          type: boolean
          example: true
        page_size:
          type: integer
          minimum: 1
          maximum: 100
          example: 100
        page:
          type: integer
          minimum: 1
          example: 1
        
    q:
      type: string
      example: "\"Elon Musk\""
    lang:
      type: string
      enum: ["af", "ar", "bg", "bn", "ca", "cn", "cs", "cy", "da", "de", "el", "en", "es", "et", "fa", "fi", "fr", "gu", "he", "hi", "hr", "hu", "id", "it", "ja", "kn", "ko", "lt", "lv", "mk", "ml", "mr", "ne", "nl", "no", "pa", "pl", "pt", "ro", "ru", "sk", "sl", "so", "sq", "sv", "sw", "ta", "te", "th", "tl", "tr", "tw", "uk", "ur", "vi"]
      example: "en"
    publish_date_precision:
      type: string
      enum: ["full", "timezone unknown", "date"]
      example: "full"
    date:
      type: string
      example: "2021/05/06"
    search_in:
      type: string
      enum: ["title", "summary", "title_summary"]
      example: "title"
    countries:
      type: string
      example: "US,CA"
    topic:
      type: string
      enum: ["news", "sport", "tech", "world", "finance", "politics", "business", "economics", "entertainment", "beauty", "travel", "music", "food", "science", "gaming"]
      example: "business"
    sources:
      type: string
      example: "nytimes.com,theguardian.com"
    not_sources:
      type: string
      example: "wsj.com"
    ranked_only:
      type: boolean
      example: true
    rank:
      type: integer
      minimum: 1
      maximum: 999999
      example: 1000
    sort_by:
      type: string
      enum: ["relevancy", "date", "rank"]
      example: "rank"
    when:
      type: string
      example: "24h"
    page_size:
      type: integer
      minimum: 1
      maximum: 100
      example: 100
    page:
      type: integer
      minimum: 1
      example: 1
    # Response parameters
    success_status:
      type: string
      enum: ["ok", "No matches for your search."]
      example: "ok"
    error_status:
      type: string
      enum: ["error", "No matches for your search."]
      example: "error"
    list:
      type: array
      items:
        type: string
      nullable: true
    article:
      type: array
      items:
        type: object
        properties:
          title:
            type: string
          author:
            type: string
          published_date:
            type: string
          published_date_precision:
            type: string
          link:
            type: string
          clean_url:
            type: string
          excerpt:
            type: string
            nullable: true
          summary:
            type: string
          rights:
            type: string
            nullable: true
          rank:
            type: integer
          topic:
            type: string
          country:
            type: string
          language:
            type: string
            nullable: true
          authors:
            type: string
          is_opinion:
            type: boolean
          twitter_account:
            type: string
            nullable: true
          _score:
            type: number
            nullable: true
          _id:
            type: string
    search_user_input:
      type: object
      properties:
        q:
          type: string
        search_in:
          $ref: "#/components/schemas/list"
        lang:
          $ref: "#/components/schemas/list"
        not_lang:
          $ref: "#/components/schemas/list"
        countries:
          $ref: "#/components/schemas/list"
        not_countries:
          $ref: "#/components/schemas/list"
        from:
          type: string
        to:
          type: string
          nullable: true
        ranked_only:
          type: string
        from_rank:
          type: integer
          nullable: true
        to_rank:
          type: integer
          nullable: true
        sort_by:
          type: string
        page:
          type: integer
        size:
          type: integer
        sources:
          $ref: "#/components/schemas/list"
        not_sources:
          $ref: "#/components/schemas/list"
        topic:
          type: string
          nullable: true
        published_date_precision:
          type: string
          nullable: true
    latest_headlines_user_input:
      type: object
      properties:
        lang:
          $ref: "#/components/schemas/list"
        not_lang:
          $ref: "#/components/schemas/list"
        countries:
          $ref: "#/components/schemas/list"
        not_countries:
          $ref: "#/components/schemas/list"
        page:
          type: integer
        size:
          type: integer
        sources:
          $ref: "#/components/schemas/list"
        not_sources:
          $ref: "#/components/schemas/list"
        topic:
          type: string
          nullable: true
    sources_user_input:
      type: object
      properties:
        lang:
          $ref: "#/components/schemas/list"
        countries:
          $ref: "#/components/schemas/list"
        topic:
          type: string
          nullable: true
    200_response:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/success_status"
        total_hits:
          type: integer
        page:
          type: integer
        total_pages:
          type: integer
        page_size:
          type: integer
        articles:
          $ref: "#/components/schemas/article"
        user_input:
          $ref: "#/components/schemas/search_user_input"
    200_response_latest:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/success_status"
        total_hits:
          type: integer
        page:
          type: integer
        total_pages:
          type: integer
        page_size:
          type: integer
        articles:
          $ref: "#/components/schemas/article"
        user_input:
          $ref: "#/components/schemas/latest_headlines_user_input"
    200_response_sources:
      type: object
      properties:
        message:
          type: string
        sources:
          $ref: "#/components/schemas/list"
        user_input:
          $ref: "#/components/schemas/sources_user_input"
    error_response:
      type: object
      properties:
        status:
          $ref: "#/components/schemas/error_status"
        error_code:
          type: string
        message:
          type: string
  securitySchemes:
      api_key:
        type: apiKey
        name: x-api-key
        in: header